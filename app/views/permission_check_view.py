import streamlit as st
import pandas as pd
from .base_view import BaseView
from app.controllers import SchemaController, RelationshipController, UserController, GroupController, AppController, RedisController

class PermissionCheckView(BaseView):
    """–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º."""
    
    def __init__(self):
        super().__init__()
        self.schema_controller = SchemaController()
        self.relationship_controller = RelationshipController()
        self.user_controller = UserController()
        self.group_controller = GroupController()
        self.app_controller = AppController()
        self.redis_controller = RedisController()
    
    def render(self, skip_status_check=False):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π."""
        self.show_header("–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞–¥ —Å—É—â–Ω–æ—Å—Ç—è–º–∏", icon="‚úÖ")
        
        if not skip_status_check and not self.show_status():
            return
        
        tenant_id = self.get_tenant_id("permission_check_view")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ –∫—ç—à–∞ Redis
        col_cache1, col_cache2 = st.columns([3, 1])
        with col_cache2:
            if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫—ç—à Redis", key="reset_redis_cache"):
                success, message = self.redis_controller.flush_cache()
                if success:
                    st.success(f"–ö—ç—à Redis —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω")
                else:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫—ç—à–∞: {message}")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ö–µ–º
        schema_success, schema_result = self.schema_controller.get_current_schema(tenant_id)
        schema = schema_result.get("schema", {}) if schema_result else {}
        
        if schema_success:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è —Ñ–æ—Ä–º—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
            st.markdown("""
            <div class="card">
                <div class="card-title">üìã –§–æ—Ä–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π</div>
                <div class="card-content">
                    <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.</p>
                </div>
            </div>
            """, unsafe_allow_html=True)
            
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.markdown("#### üì¶ –°—É—â–Ω–æ—Å—Ç—å")
                
                entity_types = []
                if schema:
                    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã —Å—É—â–Ω–æ—Å—Ç–µ–π –∏–∑ —Å—Ö–µ–º—ã
                    try:
                        entity_definitions = schema.get("entity_definitions", {})
                        
                        entity_types = list(entity_definitions.keys())
                        
                        # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å—É—â–Ω–æ—Å—Ç–∏
                        entity_type = st.selectbox("–¢–∏–ø —Å—É—â–Ω–æ—Å—Ç–∏", entity_types, index=entity_types.index("petitions") if "petitions" in entity_types else 0)
                    except Exception as e:
                        st.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–ø—ã —Å—É—â–Ω–æ—Å—Ç–µ–π –∏–∑ —Å—Ö–µ–º—ã: {str(e)}")
                        entity_type = st.text_input("–¢–∏–ø —Å—É—â–Ω–æ—Å—Ç–∏", "petitions", key="perm_check_entity_type_input")
                else:
                        entity_type = st.text_input("–¢–∏–ø —Å—É—â–Ω–æ—Å—Ç–∏", "petitions", key="perm_check_entity_type_manual")

                entity_id = st.text_input("ID —Å—É—â–Ω–æ—Å—Ç–∏", "1", key="perm_check_entity_id")
            
            with col2:
                st.markdown("#### üë§ –°—É–±—ä–µ–∫—Ç")
                
                # –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å—É–±—ä–µ–∫—Ç–∞
                subject_type = st.selectbox("–¢–∏–ø —Å—É–±—ä–µ–∫—Ç–∞", ["user", "group"], key="perm_check_subject_type")
                subject_id = st.text_input("ID —Å—É–±—ä–µ–∫—Ç–∞", "", key="perm_check_subject_id")
        
            with col3:
                st.markdown("#### üîê –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ")
        
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —Å—É—â–Ω–æ—Å—Ç–∏
                permissions = []
                if schema and entity_type in entity_types:
                    try:
                        entity_def = schema.get("entity_definitions", {}).get(entity_type, {})
                        permission_defs = entity_def.get("permissions", {})
                        
                        permissions = list(permission_defs.keys())
                        
                        if permissions:
                            permission = st.selectbox("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ", permissions, key="perm_check_permission")
                        else:
                            permission = st.text_input("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ", "view", key="perm_check_permission_input")
                    except Exception as e:
                        st.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: {str(e)}")
                        permission = st.text_input("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ", "view", key="perm_check_permission_error")
                else:
                    permission = st.text_input("–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ", "view", key="perm_check_permission_manual")
                
                # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º UI
                st.markdown("<br>", unsafe_allow_html=True)  # –î–æ–±–∞–≤–ª—è–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
                check_button = st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ", key="check_permission_button", type="primary")
        
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
            if check_button and subject_id and entity_id:
                st.markdown("#### –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
                
                with st.spinner("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è..."):
                    success, result = self.relationship_controller.check_permission(
                        entity_type, entity_id, permission, subject_id, tenant_id)
                    
                    if success:
                        if result.get("can") == "CHECK_RESULT_ALLOWED":
                            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                            success_html = f"""
                            <div style="background-color: rgba(40, 167, 69, 0.1); border: 1px solid rgba(40, 167, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                                <div style="display: flex; align-items: center;">
                                    <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚úÖ</span>
                                    <div>
                                        <div style="font-weight: 600; font-size: 1.1rem;">–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω</div>
                                        <div style="margin-top: 0.25rem; font-size: 0.9rem;">
                                            <code>{subject_type}:{subject_id}</code> –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ <code>{permission}</code> –∫ <code>{entity_type}:{entity_id}</code>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            """
                            st.markdown(success_html, unsafe_allow_html=True)
                        else:
                            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                            error_html = f"""
                            <div style="background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                                <div style="display: flex; align-items: center;">
                                    <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚ùå</span>
                                    <div>
                                        <div style="font-weight: 600; font-size: 1.1rem;">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</div>
                                        <div style="margin-top: 0.25rem; font-size: 0.9rem;">
                                            <code>{subject_type}:{subject_id}</code> –Ω–µ –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è <code>{permission}</code> –∫ <code>{entity_type}:{entity_id}</code>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            """
                            st.markdown(error_html, unsafe_allow_html=True)
                        
                        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≤ —É–ª—É—á—à–µ–Ω–Ω–æ–º —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–µ
                        with st.expander("–ü–æ–¥—Ä–æ–±–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞"):
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º JSON —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π
                            st.json(result)
                    else:
                        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                        error_msg = f"""
                        <div style="background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                            <div style="display: flex; align-items: center;">
                                <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚ùå</span>
                                <div>
                                    <div style="font-weight: 600; font-size: 1.1rem;">–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ</div>
                                    <div style="margin-top: 0.25rem; font-size: 0.9rem;">{result}</div>
                                </div>
                            </div>
                        </div>
                        """
                        st.markdown(error_msg, unsafe_allow_html=True)
        else:
            # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Å—Ö–µ–º—ã —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            error_msg = f"""
            <div style="background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                <div style="display: flex; align-items: center;">
                    <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚ùå</span>
                    <div>
                        <div style="font-weight: 600; font-size: 1.1rem;">–û—à–∏–±–∫–∞ —Å—Ö–µ–º—ã</div>
                        <div style="margin-top: 0.25rem; font-size: 0.9rem;">–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ö–µ–º—É: {schema_result}</div>
                    </div>
                </div>
            </div>
            """
            st.markdown(error_msg, unsafe_allow_html=True)
    
    def render_simplified(self, skip_status_check=False):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º."""
        self.show_header("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏", 
                       "–ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", 
                       icon="‚úÖ")
        
        if not skip_status_check and not self.show_status():
            return
        
        tenant_id = self.get_tenant_id("permission_check_view_simplified")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–±—Ä–æ—Å–∞ –∫—ç—à–∞ Redis
        col_cache1, col_cache2 = st.columns([3, 1])
        with col_cache2:
            if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å –∫—ç—à Redis", key="reset_redis_cache_simplified"):
                success, message = self.redis_controller.flush_cache()
                if success:
                    st.success(f"–ö—ç—à Redis —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω")
                else:
                    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –∫—ç—à–∞: {message}")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        users = self.user_controller.get_users(tenant_id) or []
        groups = self.group_controller.get_groups(tenant_id) or []
        apps = self.app_controller.get_apps(tenant_id) or []
        
        # –¢–æ–ª—å–∫–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏, –Ω–µ —à–∞–±–ª–æ–Ω—ã
        app_instances = [app for app in apps if not app.get('is_template', False) and app.get('id')]
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        info_html = """
        <div style="background-color: rgba(23, 162, 184, 0.1); border: 1px solid rgba(23, 162, 184, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
            <div style="display: flex; align-items: center;">
                <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚ÑπÔ∏è</span>
                <div>
                    <div style="font-weight: 600; font-size: 1.1rem;">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞</div>
                    <div style="margin-top: 0.25rem; font-size: 0.9rem;">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ (–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—ã) –¥–æ—Å—Ç—É–ø–Ω–æ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è".</div>
                </div>
            </div>
        </div>
        """
        st.markdown(info_html, unsafe_allow_html=True)
        
        # –ö–∞—Ä—Ç–æ—á–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞
        st.markdown("""
        <div class="card">
            <div class="card-title">üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</div>
            <div class="card-content">
                <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞.</p>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.markdown("#### üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
            # –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if users:
                selected_user = st.selectbox(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    [user.get('id') for user in users],
                    format_func=lambda x: next((user.get('name', f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.get('id')}") 
                                              for user in users if user.get('id') == x), x),
                    key="check_user"
                )
            else:
                st.info("–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'.")
                selected_user = st.text_input("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "", key="check_user_manual")
        
        with col2:
            st.markdown("#### üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
            # –í—ã–±–æ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if app_instances:
                app_options = [(i, app) for i, app in enumerate(app_instances)]
                selected_app_index = st.selectbox(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                    range(len(app_options)),
                    format_func=lambda i: f"{app_options[i][1].get('display_name')} (ID: {app_options[i][1].get('id')})",
                    key="check_app"
                )
                selected_app = app_options[selected_app_index][1]
            else:
                st.info("–ù–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –≤ —Ä–∞–∑–¥–µ–ª–µ '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è'.")
                selected_app = None
        
        with col3:
            st.markdown("#### üîë –î–µ–π—Å—Ç–≤–∏–µ")
            # –í—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
            if selected_app and selected_app.get('actions'):
                selected_action = st.selectbox(
                    "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
                    [action.get('name') for action in selected_app.get('actions')],
                    key="check_action"
                )
            else:
                st.info("–£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π.")
                selected_action = st.text_input("–î–µ–π—Å—Ç–≤–∏–µ", "", key="check_action_manual")
        
        # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
        col1, col2, col3 = st.columns([1, 2, 1])
        with col2:
            if selected_user and selected_app and selected_action:
                check_button = st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø", key="check_access_button", type="primary", use_container_width=True)
            else:
                st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø", key="check_access_disabled_button", type="primary", disabled=True, use_container_width=True)
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
        if selected_user and selected_app and selected_action and 'check_access_button' in st.session_state and st.session_state.check_access_button:
            st.markdown("#### –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
            
            with st.spinner("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞..."):
                success, result = self.relationship_controller.check_permission(
                    selected_app['name'], selected_app['id'], selected_action, selected_user, tenant_id
                )
                
                if success:
                    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ can_access
                    can_access = False
                    
                    if isinstance(result, dict):
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–Ω–∞—á–µ–Ω–∏—è can
                        if "can" in result:
                            if isinstance(result["can"], bool):
                                can_access = result["can"]
                            elif isinstance(result["can"], str):
                                can_access = result["can"] == "CHECK_RESULT_ALLOWED" or result["can"] == "true" or result["can"] == "True"
                    
                    # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                    if can_access:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        success_html = f"""
                        <div style="background-color: rgba(40, 167, 69, 0.1); border: 1px solid rgba(40, 167, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                            <div style="display: flex; align-items: center;">
                                <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚úÖ</span>
                                <div>
                                    <div style="font-weight: 600; font-size: 1.1rem;">–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω</div>
                                    <div style="margin-top: 0.25rem; font-size: 0.9rem;">
                                        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ <code>{selected_action}</code> –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è <code>{selected_app.get('display_name')}</code>
                                    </div>
                                </div>
                            </div>
                        </div>
                        """
                        st.markdown(success_html, unsafe_allow_html=True)
                    else:
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                        error_html = f"""
                        <div style="background-color: rgba(220, 53, 69, 0.1); border: 1px solid rgba(220, 53, 69, 0.5); color: var(--text); padding: 1rem; border-radius: var(--radius); margin: 1rem 0;">
                            <div style="display: flex; align-items: center;">
                                <span style="font-size: 1.5rem; margin-right: 0.75rem;">‚ùå</span>
                                <div>
                                    <div style="font-weight: 600; font-size: 1.1rem;">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</div>
                                    <div style="margin-top: 0.25rem; font-size: 0.9rem;">
                                        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∏–º–µ–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ <code>{selected_action}</code> –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è <code>{selected_app.get('display_name')}</code>
                                    </div>
                                </div>
                            </div>
                        </div>
                        """
                        st.markdown(error_html, unsafe_allow_html=True)
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —ç–∫—Å–ø–∞–Ω–¥–µ—Ä–µ
                    if isinstance(result, dict):
                        with st.expander("–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"):
                            # –û—á–∏—â–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ local development mode
                            if "metadata" in result and "reason" in result["metadata"] and "Local development mode" in result["metadata"]["reason"]:
                                result["metadata"]["reason"] = "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"
                            
                            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
                            st.json(result) 